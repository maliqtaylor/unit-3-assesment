{"version":3,"sources":["Components/CircleSelector/CircleSelector.js","Components/Circles/Circles.js","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","onClick","handler","value","Circles","selected","App","state","bind","e","this","setState","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAceA,G,YAXQ,SAACC,GACtB,OACE,sBAAKC,UAAU,iBAAf,UACE,wBAAQC,QAASF,EAAMG,QAASC,MAAO,EAAvC,sBACA,wBAAQF,QAASF,EAAMG,QAASC,MAAO,EAAvC,sBACA,wBAAQF,QAASF,EAAMG,QAASC,MAAO,EAAvC,sBACA,wBAAQF,QAASF,EAAMG,QAASC,MAAO,EAAvC,2BCKSC,G,MAXC,SAACL,GACf,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAA8B,MAAnBD,EAAMM,SAAmB,WAAa,GAAtD,eACA,qBAAKL,UAA8B,MAAnBD,EAAMM,SAAmB,WAAa,GAAtD,eACA,qBAAKL,UAA8B,MAAnBD,EAAMM,SAAmB,WAAa,GAAtD,eACA,qBAAKL,UAA8B,MAAnBD,EAAMM,SAAmB,WAAa,GAAtD,oBC0BSC,E,kDA7Bb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CAAEF,SAAU,MACzB,EAAKH,QAAU,EAAKA,QAAQM,KAAb,gBAHE,E,oDAMXC,GACNC,KAAKC,SAAS,CACZN,SAAUI,EAAEG,OAAOT,U,+BAKrB,OACE,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACEE,QAASQ,KAAKR,UAEhB,cAAC,EAAD,CACEG,SAAUK,KAAKH,MAAMF,qB,GAtBfQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3091b0b.chunk.js","sourcesContent":["import React from 'react';\nimport './CircleSelector.css';\n\nconst CircleSelector = (props) => {\n  return (\n    <div className='CircleSelector'>\n      <button onClick={props.handler} value={1}>Circle 1</button>\n      <button onClick={props.handler} value={2}>Circle 2</button>\n      <button onClick={props.handler} value={3}>Circle 3</button>\n      <button onClick={props.handler} value={4}>Circle 4</button>\n    </div>\n  )\n}\n\nexport default CircleSelector","import React from 'react';\nimport './Circles.css';\n\nconst Circles = (props) => {\n  return (\n    <div className='Circles'>\n      <div className={props.selected === \"1\" ? 'selected' : ''}>1</div>\n      <div className={props.selected === \"2\" ? 'selected' : ''}>2</div>\n      <div className={props.selected === \"3\" ? 'selected' : ''}>3</div>\n      <div className={props.selected === \"4\" ? 'selected' : ''}>4</div>\n    </div>\n  )\n}\n\nexport default Circles","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './Components/CircleSelector/CircleSelector';\nimport Circles from './Components/Circles/Circles';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selected: null };\n    this.handler = this.handler.bind(this)\n  }\n\n  handler(e) {\n    this.setState({\n      selected: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 3 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            handler={this.handler}\n          />\n          <Circles\n            selected={this.state.selected}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}